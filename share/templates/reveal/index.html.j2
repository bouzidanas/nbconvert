{%- extends 'base.html.j2' -%}
{% from 'mathjax.html.j2' import mathjax %}
{% from 'jupyter_widgets.html.j2' import jupyter_widgets %}

{% set reveal_url_prefix = resources.reveal.url_prefix | default('https://unpkg.com/reveal.js@4.0.2', true) %}
{% set reveal_theme = resources.reveal.theme | default('white', true) %}
{% set reveal_transition = resources.reveal.transition | default('slide', true) %}
{% set reveal_number = resources.reveal.number | default('', true) %}
{% set reveal_scroll = resources.reveal.scroll | default(false, true) | json_dumps %}

{%- block header -%}
<!DOCTYPE html>
<html>
<head>

{%- block html_head -%}
<meta charset="utf-8" />
<meta http-equiv="X-UA-Compatible" content="chrome=1" />

<meta name="apple-mobile-web-app-capable" content="yes" />
<meta name="apple-mobile-web-app-status-bar-style" content="black-translucent" />

{% set nb_title = nb.metadata.get('title', resources['metadata']['name']) | escape_html_keep_quotes %}
<title>{{nb_title}} slides</title>

{%- block html_head_js -%}
{%- block html_head_js_jquery -%}
<script src="{{ resources.jquery_url }}"></script>
{%- endblock html_head_js_jquery -%}
{%- block html_head_js_requirejs -%}
<script src="{{ resources.require_js_url }}"></script>
{%- endblock html_head_js_requirejs -%}
{%- endblock html_head_js -%}

{% block jupyter_widgets %}
  {%- if "widgets" in nb.metadata -%}
    {{ jupyter_widgets(resources.jupyter_widgets_base_url, resources.html_manager_semver_range, resources.widget_renderer_url) }}
  {%- endif -%}
{% endblock jupyter_widgets %}

<!-- General and theme style sheets -->
<link rel="stylesheet" href="{{ reveal_url_prefix }}/dist/reveal.css">

<!-- If the query includes 'print-pdf', include the PDF print sheet -->
<script>
if( window.location.search.match( /print-pdf/gi ) ) {
        var link = document.createElement( 'link' );
        link.rel = 'stylesheet';
        link.type = 'text/css';
        document.getElementsByTagName( 'head' )[0].appendChild( link );
}
</script>

{% for css in resources.inlining.css -%}
  <style type="text/css">
    {{ css }}
  </style>
{% endfor %}

{% block notebook_css %}
{{ resources.include_css("static/index.css") }}
{% if resources.theme == 'dark' %}
    {{ resources.include_css("static/theme-dark.css") }}
{% else %}
    {{ resources.include_css("static/theme-light.css") }}
{% endif %}
<style type="text/css">
a.anchor-link {
   display: none;
}
.highlight  {
    margin: 0.4em;
}
.jp-Notebook {
    padding: 0;
}
:root {
    --jp-ui-font-size1: 20px;       /* instead of 14px */
    --jp-content-font-size1: 20px;  /* instead of 14px */
    --jp-code-font-size: 19px;      /* instead of 13px */
    --jp-cell-prompt-width: 110px;  /* instead of 64px */
}
@media print {
  body {
    margin: 0;
  }
}
</style>

{% endblock notebook_css %}

{%- block html_head_js_mathjax -%}
{{ mathjax(resources.mathjax_url) }}
{%- endblock html_head_js_mathjax -%}

{%- block html_head_css -%}
{%- endblock html_head_css -%}

{%- endblock html_head -%}

<!-- Reveal Theme -->
<link rel="stylesheet" href="{{ reveal_url_prefix }}/dist/theme/{{reveal_theme}}.css" id="theme">

<!-- Custom Reveal Theme -->
{{ resources.include_css("static/custom_reveal.css") }}

</head>
{% endblock header%}

{%- block body_header -%}
{% if resources.theme == 'dark' %}
<body class="jp-Notebook" data-jp-theme-light="false" data-jp-theme-name="JupyterLab Dark">
{% else %}
<body class="jp-Notebook" data-jp-theme-light="true" data-jp-theme-name="JupyterLab Light">
{% endif %}
<div class="reveal">
<div class="slides">
{%- endblock body_header -%}

{% block body_footer %}
</div>
</div>
</body>
{% endblock body_footer %}

{% block footer %}
{{ super() }}

{% block footer_js %}
<script>
require(
    {
      // it makes sense to wait a little bit when you are loading
      // reveal from a cdn in a slow connection environment
      waitSeconds: 15
    },
    [
      "{{ reveal_url_prefix }}/dist/reveal.js",
      "{{ reveal_url_prefix }}/plugin/notes/notes.js"
    ],

    function(Reveal, RevealNotes){
        // Full list of configuration options available here: https://github.com/hakimel/reveal.js#configuration
        Reveal.initialize({
            // The "normal" size of the presentation, aspect ratio will
            // be preserved when the presentation is scaled to fit different
            // resolutions. Can be specified using percentage units.
            width: 840,
            height: 440,

            // Factor of the display size that should remain empty around
            // the content
            margin: 0.2,

            // Bounds for smallest/largest possible scale to apply to content
            minScale: 0.05,
            maxScale: 1.4,

            // Display presentation control arrows
            controls: true,

            // Help the user learn the controls by providing hints, for example by
            // bouncing the down arrow when they first encounter a vertical slide
            controlsTutorial: false,

            // Determines where controls appear, "edges" or "bottom-right"
            controlsLayout: 'bottom-right',

            // Visibility rule for backwards navigation arrows; "faded", "hidden"
            // or "visible"
            controlsBackArrows: 'faded',

            // Display a presentation progress bar
            progress: true,

            // Display the page number of the current slide
            // - true:    Show slide number
            // - false:   Hide slide number
            //
            // Can optionally be set as a string that specifies the number formatting:
            // - "h.v":   Horizontal . vertical slide number (default)
            // - "h/v":   Horizontal / vertical slide number
            // - "c":   Flattened slide number
            // - "c/t":   Flattened slide number / total slides
            //
            // Alternatively, you can provide a function that returns the slide
            // number for the current slide. The function should take in a slide
            // object and return an array with one string [slideNumber] or
            // three strings [n1,delimiter,n2]. See #formatSlideNumber().
            slideNumber: false,

            // Can be used to limit the contexts in which the slide number appears
            // - "all":      Always show the slide number
            // - "print":    Only when printing to PDF
            // - "speaker":  Only in the speaker view
            showSlideNumber: 'all',

            // Use 1 based indexing for # links to match slide number (default is zero
            // based)
            hashOneBasedIndex: false,

            // Add the current slide number to the URL hash so that reloading the
            // page/copying the URL will return you to the same slide
            hash: false,

            // Flags if we should monitor the hash and change slides accordingly
            respondToHashChanges: true,

            // Push each slide change to the browser history.  Implies `hash: true`
            history: true,

            // Enable keyboard shortcuts for navigation
            keyboard: true,

            // Optional function that blocks keyboard events when retuning false
            //
            // If you set this to 'focused', we will only capture keyboard events
            // for embedded decks when they are in focus
            keyboardCondition: null,

            // Disables the default reveal.js slide layout (scaling and centering)
            // so that you can use custom CSS layout
            disableLayout: false,

            // Enable the slide overview mode
            overview: true,

            // Vertical centering of slides
            center: true,

            // Enables touch navigation on devices with touch input
            touch: true,

            // Loop the presentation
            loop: false,

            // Change the presentation direction to be RTL
            rtl: false,

            // Changes the behavior of our navigation directions.
            //
            // "default"
            // Left/right arrow keys step between horizontal slides, up/down
            // arrow keys step between vertical slides. Space key steps through
            // all slides (both horizontal and vertical).
            //
            // "linear"
            // Removes the up/down arrows. Left/right arrows step through all
            // slides (both horizontal and vertical).
            //
            // "grid"
            // When this is enabled, stepping left/right from a vertical stack
            // to an adjacent vertical stack will land you at the same vertical
            // index.
            //
            // Consider a deck with six slides ordered in two vertical stacks:
            // 1.1    2.1
            // 1.2    2.2
            // 1.3    2.3
            //
            // If you're on slide 1.3 and navigate right, you will normally move
            // from 1.3 -> 2.1. If "grid" is used, the same navigation takes you
            // from 1.3 -> 2.3.
            navigationMode: 'default',

            // Randomizes the order of slides each time the presentation loads
            shuffle: false,

            // Turns fragments on and off globally
            fragments: true,

            // Flags whether to include the current fragment in the URL,
            // so that reloading brings you to the same fragment position
            fragmentInURL: true,

            // Flags if the presentation is running in an embedded mode,
            // i.e. contained within a limited portion of the screen
            embedded: false,

            // Flags if we should show a help overlay when the question-mark
            // key is pressed
            help: true,

            // Flags if it should be possible to pause the presentation (blackout)
            pause: true,

            // Flags if speaker notes should be visible to all viewers
            showNotes: false,

            // Global override for autolaying embedded media (video/audio/iframe)
            // - null:   Media will only autoplay if data-autoplay is present
            // - true:   All media will autoplay, regardless of individual setting
            // - false:  No media will autoplay, regardless of individual setting
            autoPlayMedia: true,

            // Global override for preloading lazy-loaded iframes
            // - null:   Iframes with data-src AND data-preload will be loaded when within
            //           the viewDistance, iframes with only data-src will be loaded when visible
            // - true:   All iframes with data-src will be loaded when within the viewDistance
            // - false:  All iframes with data-src will be loaded only when visible
            preloadIframes: null,

            // Can be used to globally disable auto-animation
            autoAnimate: true,

            // Optionally provide a custom element matcher that will be
            // used to dictate which elements we can animate between.
            autoAnimateMatcher: null,

            // Default settings for our auto-animate transitions, can be
            // overridden per-slide or per-element via data arguments
            autoAnimateEasing: 'ease',
            autoAnimateDuration: 1.0,
            autoAnimateUnmatched: true,

            // CSS properties that can be auto-animated. Position & scale
            // is matched separately so there's no need to include styles
            // like top/right/bottom/left, width/height or margin.
            autoAnimateStyles: [
              'opacity',
              'color',
              'background-color',
              'padding',
              'font-size',
              'line-height',
              'letter-spacing',
              'border-width',
              'border-color',
              'border-radius',
              'outline',
              'outline-offset'
            ],

            // Controls automatic progression to the next slide
            // - 0:      Auto-sliding only happens if the data-autoslide HTML attribute
            //           is present on the current slide or fragment
            // - 1+:     All slides will progress automatically at the given interval
            // - false:  No auto-sliding, even if data-autoslide is present
            autoSlide: 0,

            // Stop auto-sliding after user input
            autoSlideStoppable: true,

            // Use this method for navigation when auto-sliding (defaults to navigateNext)
            autoSlideMethod: null,

            // Specify the average time in seconds that you think you will spend
            // presenting each slide. This is used to show a pacing timer in the
            // speaker view
            defaultTiming: null,

            // Enable slide navigation via mouse wheel
            mouseWheel: false,

            // Opens links in an iframe preview overlay
            // Add `data-preview-link` and `data-preview-link="false"` to customise each link
            // individually
            previewLinks: false,

            // Exposes the reveal.js API through window.postMessage
            postMessage: true,

            // Dispatches all reveal.js events to the parent window through postMessage
            postMessageEvents: false,

            // Focuses body when page changes visibility to ensure keyboard shortcuts work
            focusBodyOnPageVisibilityChange: true,

            // Transition style
            transition: "{{reveal_transition}}", // none/fade/slide/convex/concave/zoom

            // Transition speed
            transitionSpeed: 'default', // default/fast/slow

            // Transition style for full page slide backgrounds
            backgroundTransition: 'fade', // none/fade/slide/convex/concave/zoom

            // The maximum number of pages a single slide can expand onto when printing
            // to PDF, unlimited by default
            pdfMaxPagesPerSlide: Number.POSITIVE_INFINITY,

            // Prints each fragment on a separate slide
            pdfSeparateFragments: true,

            // Offset used to reduce the height of content within exported PDF pages.
            // This exists to account for environment differences based on how you
            // print to PDF. CLI printing options, like phantomjs and wkpdf, can end
            // on precisely the total height of the document whereas in-browser
            // printing has to end one pixel before.
            pdfPageHeightOffset: -1,

            // Number of slides away from the current that are visible
            viewDistance: 3,

            // Number of slides away from the current that are visible on mobile
            // devices. It is advisable to set this to a lower number than
            // viewDistance in order to save resources.
            mobileViewDistance: 2,

            // The display mode that will be used to show slides
            display: 'block',

            // Hide cursor if inactive
            hideInactiveCursor: true,

            // Time before the cursor is hidden (in ms)
            hideCursorTime: 5000,

            plugins: [RevealNotes]
        });

        var update = function(event){
          if(MathJax.Hub.getAllJax(Reveal.getCurrentSlide())){
            MathJax.Hub.Rerender(Reveal.getCurrentSlide());
          }
        };

        Reveal.addEventListener('slidechanged', update);

        function setScrollingSlide() {
            var scroll = {{ reveal_scroll }}
            if (scroll === true) {
              var h = $('.reveal').height() * 0.95;
              $('section.present').find('section')
                .filter(function() {
                  return $(this).height() > h;
                })
                .css('height', 'calc(95vh)')
                .css('overflow-y', 'scroll')
                .css('margin-top', '20px');
            }
        }

        // check and set the scrolling slide every time the slide change
        Reveal.addEventListener('slidechanged', setScrollingSlide);
    }
);
</script>
{% endblock footer_js %}
</html>
{% endblock footer %}